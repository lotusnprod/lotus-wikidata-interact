syntax = "proto3";

package protob;
option go_package = "github.com/gnames/gnfinder/protob";

message Void {}

message Pong {
  string value = 1;
}

message Version {
  string version = 1;
  string build = 2;
}

message Params {
  string text = 1;
  bool no_bayes = 2; // has to make it negative because of false default value.
  string language = 3;
  bool detect_language = 4;
  bool verification = 5;
  int32 tokens_around = 6;
  repeated int32 sources = 7;
}

message Output {
  string date = 1;
  string finder_version = 2;
  repeated Approach approach = 3;
  int32  tokens_around = 4;
  string language = 5;
  string language_detected = 6;
  bool detect_language = 7;
  int32 total_tokens = 8;
  int32 total_candidates = 9;
  int32 total_names = 10;
  repeated NameString names = 11;
}

message NameString {
  int32 cardinality = 1;
  string verbatim = 3;
  string name = 4;
  float odds = 5;
  string annot_nomen = 6;
  AnnotNomenType annot_nomen_type = 7;
  int32 offset_start = 8;
  int32 offset_end = 9;
  repeated string words_before = 10;
  repeated string words_after = 11;

  Verification verification = 12;
}

message Verification {
  ResultData  best_result = 1;
  repeated ResultData preferred_results = 2;
  int32 data_sources_num = 3;
  string data_source_quality = 4;
  int32 retries = 5;
  string error = 6;
}

message ResultData {
  int32  data_source_id = 1;
  string data_source_title = 2;
  string taxon_id = 3;
  string matched_name = 4;
  int32  matched_cardinality = 5;
  string matched_canonical_simple = 6;
  string matched_canonical_full = 7;
  string current_name = 8;
  int32  current_cardinality = 9;
  string current_canonical_simple = 10;
  string current_canonical_full = 11;
  bool   synonym = 12;
  string classification_path = 13;
  string classification_rank = 14;
  string classification_ids = 15;
  int32  edit_distance = 16;
  int32  stem_edit_distance = 17;
  MatchType match_type = 18;
}

enum MatchType {
  NONE = 0;
  EXACT = 1;
  FUZZY = 2;
  PARTIAL_EXACT = 3;
  PARTIAL_FUZZY = 4;
}

enum AnnotNomenType {
  NO_ANNOT = 0;
  SP_NOV = 1;
  COMB_NOV = 2;
  SUBSP_NOV = 3;
}

enum Approach {
  HEURISTIC = 0;
  BAYES = 1;
}

service GNFinder {
  rpc Ping(Void) returns(Pong) {}
  rpc Ver(Void) returns(Version) {}
  rpc FindNames(Params) returns(Output) {}
}
